version: '4.24.0'
services: 
  policy_api_server:
    image: nginx:latest
    ports: 
      - "9000:80"
    volumes: 
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./bundles:/usr/share/nginx/bundles  

  sql_server:
    image: postgres
    environment:
      - POSTGRES_DB=policies
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql

  opal_server:
    image: permitio/opal-server:latest
    environment:
      - OPAL_POLICY_BUNDLE_URL=http://policy_api_server
      - OPAL_POLICY_SOURCE_TYPE=API
      - OPAL_POLICY_REPO_CLONE_PATH=~/regoclone
      - OPAL_POLICY_REPO_POLLING_INTERVAL=30
      - OPAL_DATA_CONFIG_SOURCES={"config":{"entries":[{"url":"postgresql://admin@sql_server:5432/policies","config":{"fetcher":"PostgresFetchProvider","query":"SELECT * FROM groups;","connection_params":{"password":"postgres"}},"topics":["policy_data"],"dst_path":"groups"}]}}
    ports:
      - "7002:7002"
    depends_on:
      - policy_api_server

  opal_client:
    image: custom-opal-client
    build: 
      context: .
      dockerfile: custom-opal-client.Dockerfile
    environment:
      - OPAL_SERVER_URL=http://opal_server:7002
      - OPAL_LOG_FORMAT_INCLUDE_PID=true
      - OPAL_INLINE_OPA_LOG_FORMAT=http
      - OPAL_POLICY_SUBSCRIPTION_DIRS=policy/userapp
      - OPAL_FETCH_PROVIDER_MODULES=opal_common.fetcher.providers,opal_fetcher_postgres.provider
    ports:
      - "7766:7000"
      - "8181:8181"
    depends_on:
      - opal_server
      - sql_server
    command: sh -c "exec ./wait-for.sh opal_server:7002 sql_server:5432 --timeout=20 -- ./start.sh"

  policy_app:
    image: policy-app
    build: 
      context: .
      dockerfile: frontend.Dockerfile
    ports:
      - "8000:8000"